// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0
// source: queries_ai_plan.sql

package db

import (
	"context"
	"encoding/json"

	"github.com/google/uuid"
)

const retreivePlan = `-- name: RetreivePlan :one
SELECT id, user_id, raw_data, created_at, updated_at FROM ai_plan
WHERE user_id=$1
`

func (q *Queries) RetreivePlan(ctx context.Context, userID uuid.UUID) (AiPlan, error) {
	row := q.db.QueryRowContext(ctx, retreivePlan, userID)
	var i AiPlan
	err := row.Scan(
		&i.ID,
		&i.UserID,
		&i.RawData,
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return i, err
}

const savePlan = `-- name: SavePlan :exec
INSERT INTO ai_plan(user_id, raw_data)
VALUES($1, $2)
`

type SavePlanParams struct {
	UserID  uuid.UUID
	RawData json.RawMessage
}

func (q *Queries) SavePlan(ctx context.Context, arg SavePlanParams) error {
	_, err := q.db.ExecContext(ctx, savePlan, arg.UserID, arg.RawData)
	return err
}
